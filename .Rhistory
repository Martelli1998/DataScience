data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$X = as.numeric(as.character(data$Hwy))
data$X.1 = as.numeric(as.character(data$Combined))
data$X.2 = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Combined(mpg','Fuel.Consumption')]
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Combined(mpg)','Fuel.Consumption')]
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Combined(mpg)','Fuel.Consumption')]
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Combined(mpg)','Fuel.Consumption')]
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
#acces unique car makes
unique_car_makers = unique(data$Make)
for (i in unique_car_makers) {
print(i)
}
#calculamos las emisiones para cada marca en particular. queremos identificar cuales estan por encima o debajo del promedio
avg_co2_by <- aggregate(CO2.Emissions ~ Make + Model.1, data = data, FUN = mean)
avg_co2_by_maker <- aggregate(CO2.Emissions ~ Make, data = avg_co2_by, FUN = mean)
ggplot(data = avg_co2_by_maker) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#Graficamos unicamente las 5 marcas que tienen mayores emisiones de carbono y las que menor tienen
sorted_avarage_CO2_high = avg_co2_by_maker[order(-avg_co2_by_maker$CO2.Emissions),] #ordenamos de mayor a menor nuestro data set
Highest_emission_makers = head(sorted_avarage_CO2_high,5)
lowest_emission_makers = tail(sorted_avarage_CO2_high, 5)
low_high_emissions = rbind(Highest_emission_makers,lowest_emission_makers)
#graficamos el grafico de barras
ggplot(data = low_high_emissions) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#agregamos linea promedio:
mean_CO2<- mean(avg_co2_by_maker$CO2.Emissions)
#transformamos en variables dummies a las columnas categoricas para poder analizarlas
df_2 ={
data %>% mutate(dummy=1) %>%
spread(key=Fuel,value=dummy, fill=0) %>% slice(1:799)}
#renombramos algunas columnas para que sean mas legibles
colnames(df_2)[14] = "Diesel"
colnames(df_2)[15] = "E85"
colnames(df_2)[16] = 'Regular'
colnames(df_2)[17] = "Premium"
#corremos una nueva regresion incluyendo nuestras variables categoricas. Se omite la categoria al ser el caso base
Linear_model_2 = lm(CO2.Emissions ~Engine.Size + Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_2)
#Regresion explicando el consumo de combustible para los distintos tipos de gasolinas
Linear_model_3 = lm(Fuel.Consumption ~ Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_3)
View(df_2)
# encontrar el valor máximo por equipo y puesto
df_2%>%
group_by (Cylinders, CO2.Emissions)%>%
resumir (max = max (puntos, na.rm = TRUE ))
# encontrar el valor máximo por equipo y puesto
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (puntos, na.rm = TRUE ))
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (CO2.Emissions), na.rm = TRUE ))
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (CO2.Emissions, na.rm = TRUE ))
maximo_por_cilindro = {
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (CO2.Emissions, na.rm = TRUE ))}
View(maximo_por_cilindro)
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
#acces unique car makes
unique_car_makers = unique(data$Make)
for (i in unique_car_makers) {
print(i)
}
#calculamos las emisiones para cada marca en particular. queremos identificar cuales estan por encima o debajo del promedio
avg_co2_by <- aggregate(CO2.Emissions ~ Make + Model.1, data = data, FUN = mean)
avg_co2_by_maker <- aggregate(CO2.Emissions ~ Make, data = avg_co2_by, FUN = mean)
ggplot(data = avg_co2_by_maker) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#Graficamos unicamente las 5 marcas que tienen mayores emisiones de carbono y las que menor tienen
sorted_avarage_CO2_high = avg_co2_by_maker[order(-avg_co2_by_maker$CO2.Emissions),] #ordenamos de mayor a menor nuestro data set
Highest_emission_makers = head(sorted_avarage_CO2_high,5)
lowest_emission_makers = tail(sorted_avarage_CO2_high, 5)
low_high_emissions = rbind(Highest_emission_makers,lowest_emission_makers)
#graficamos el grafico de barras
ggplot(data = low_high_emissions) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#agregamos linea promedio:
mean_CO2<- mean(avg_co2_by_maker$CO2.Emissions)
#transformamos en variables dummies a las columnas categoricas para poder analizarlas
df_2 ={
data %>% mutate(dummy=1) %>%
spread(key=Fuel,value=dummy, fill=0) %>% slice(1:799)}
View(df_2)
View(Highest_emission_makers)
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num)
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
str(data)
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
#acces unique car makes
unique_car_makers = unique(data$Make)
for (i in unique_car_makers) {
print(i)
}
#calculamos las emisiones para cada marca en particular. queremos identificar cuales estan por encima o debajo del promedio
avg_co2_by <- aggregate(CO2.Emissions ~ Make + Model.1, data = data, FUN = mean)
avg_co2_by_maker <- aggregate(CO2.Emissions ~ Make, data = avg_co2_by, FUN = mean)
ggplot(data = avg_co2_by_maker) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#Graficamos unicamente las 5 marcas que tienen mayores emisiones de carbono y las que menor tienen
sorted_avarage_CO2_high = avg_co2_by_maker[order(-avg_co2_by_maker$CO2.Emissions),] #ordenamos de mayor a menor nuestro data set
Highest_emission_makers = head(sorted_avarage_CO2_high,5)
lowest_emission_makers = tail(sorted_avarage_CO2_high, 5)
low_high_emissions = rbind(Highest_emission_makers,lowest_emission_makers)
#graficamos el grafico de barras
ggplot(data = low_high_emissions) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#agregamos linea promedio:
mean_CO2<- mean(avg_co2_by_maker$CO2.Emissions)
#transformamos en variables dummies a las columnas categoricas para poder analizarlas
df_2 ={
data %>% mutate(dummy=1) %>%
spread(key=Fuel,value=dummy, fill=0) %>% slice(1:799)}
#renombramos algunas columnas para que sean mas legibles
colnames(df_2)[14] = "Diesel"
colnames(df_2)[15] = "E85"
colnames(df_2)[16] = 'Regular'
colnames(df_2)[17] = "Premium"
#corremos una nueva regresion incluyendo nuestras variables categoricas. Se omite la categoria al ser el caso base
Linear_model_2 = lm(CO2.Emissions ~Engine.Size + Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_2)
#Regresion explicando el consumo de combustible para los distintos tipos de gasolinas
Linear_model_3 = lm(Fuel.Consumption ~ Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_3)
# encontrar el valor máximo por equipo y puesto
maximo_por_cilindro = {
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (CO2.Emissions, na.rm = TRUE ))}
View(maximo_por_cilindro)
# encontrar el valor máximo por equipo y puesto
minimo_por_cilindro = {
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == min (CO2.Emissions, na.rm = TRUE ))}
View(minimo_por_cilindro)
#Regresion explicando el consumo de combustible para los distintos tipos de gasolinas
#El tipo de gasolina, tiene efecto en el consumo de gasolonina?
#Puede haber multicolinealidad. La gasolina afecta el consumo de gasolina y el consumo de gasolina afecta las emisones
Linear_model_3 ={lm(Fuel.Consumption ~ Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_3)}
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num).
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
#verificamos nuevamente nuestro dataset para ver podemos comenzar a trabajarlo.
str(data)
#creamos un dataset eliminando las variables categoricas para poder hacer un correlation plot
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
#al haber una gran multicolinealidad entre nuestras variables hacemos una regresion con un unico regresor.
#una de las soluciones a la multicolinealidad es eliminar regresores o aumentar el dataset, al ser fijo el dataset..
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
#acces unique car makes
unique_car_makers = unique(data$Make)
for (i in unique_car_makers) {
print(i)
}
#calculamos las emisiones para cada marca en particular. queremos identificar cuales estan por encima o debajo del promedio
avg_co2_by <- aggregate(CO2.Emissions ~ Make + Model.1, data = data, FUN = mean)
avg_co2_by_maker <- aggregate(CO2.Emissions ~ Make, data = avg_co2_by, FUN = mean)
ggplot(data = avg_co2_by_maker) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#Graficamos unicamente las 5 marcas que tienen mayores emisiones de carbono y las que menor tienen
sorted_avarage_CO2_high = avg_co2_by_maker[order(-avg_co2_by_maker$CO2.Emissions),] #ordenamos de mayor a menor nuestro data set
Highest_emission_makers = head(sorted_avarage_CO2_high,5)
lowest_emission_makers = tail(sorted_avarage_CO2_high, 5)
low_high_emissions = rbind(Highest_emission_makers,lowest_emission_makers)
#graficamos el grafico de barras
ggplot(data = low_high_emissions) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#agregamos linea promedio:
mean_CO2<- mean(avg_co2_by_maker$CO2.Emissions)
#transformamos en variables dummies a las columnas categoricas para poder analizarlas
df_2 ={
data %>% mutate(dummy=1) %>%
spread(key=Fuel,value=dummy, fill=0) %>% slice(1:799)}
#renombramos algunas columnas para que sean mas legibles
colnames(df_2)[14] = "Diesel"
colnames(df_2)[15] = "E85"
colnames(df_2)[16] = 'Regular'
colnames(df_2)[17] = "Premium"
#corremos una nueva regresion incluyendo nuestras variables categoricas. Se omite la categoria al ser el caso base
#El tipo de gasolina, es estadisticamente significativo para explicar las emisiones de carbono?
Linear_model_2 = lm(CO2.Emissions ~Engine.Size + Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_2)
#Regresion explicando el consumo de combustible para los distintos tipos de gasolinas
#El tipo de gasolina, tiene efecto en el consumo de gasolonina?
#Puede haber multicolinealidad. La gasolina afecta el consumo de gasolina y el consumo de gasolina afecta las emisones
Linear_model_3 ={lm(Fuel.Consumption ~ Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_3)}
options(scipen = 900) #eliminamos la notacion cientifica para obtener una mejor visualisacion
#cargamos las librerias necesarias para la ejecucion del codigo
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(hrbrthemes)
library(dplyr)
library(tidyverse)
library(dplyr)
#cargamos el dataframe y lo trabajamos para poder utilizarlo
data_frame = read.csv("dataset.csv")
data = data_frame[0:15] # trabajamos con este data frame
data <- data[-1,] #eliminamos primer fila del dataframe al ser redundante
data <- data[-(800:7323),]
colnames(data)[10] = "Hwy"
colnames(data)[11] = "Combined"
colnames(data)[12] = "Combined_mpg"
#corregimos error de importacion de datos, se leian como strings(chr) cuando eran numeros (num).
data$Engine.Size = as.numeric(as.character(data$Engine.Size))
data$Hwy = as.numeric(as.character(data$Hwy))
data$Combined = as.numeric(as.character(data$Combined))
data$Combined_mpg = as.numeric(as.character(data$Combined_mpg))
data$CO2.Emissions = as.numeric(as.character(data$CO2.Emissions))
data$CO2 = as.numeric(as.character(data$CO2))
data$Smog = as.numeric(as.character(data$Smog))
data$Fuel.Consumption = as.numeric(as.character(data$Fuel.Consumption))
#verificamos nuevamente nuestro dataset para ver podemos comenzar a trabajarlo.
str(data)
#creamos un dataset eliminando las variables categoricas para poder hacer un correlation plot
sub_data = data[c('Engine.Size','Hwy','CO2.Emissions','CO2','Smog','Combined','Fuel.Consumption')]
cor(sub_data)
ggcorrplot(cor(sub_data))
#al haber una gran multicolinealidad entre nuestras variables hacemos una regresion con un unico regresor.
#una de las soluciones a la multicolinealidad es eliminar regresores o aumentar el dataset, al ser fijo el dataset..
regresion = lm(CO2.Emissions~Engine.Size, data)
summary(regresion)
plot(data$CO2.Emissions,data$Engine.Size,
main='co2 emissions Vs Engine Size',
xlab='YearsExperience', ylab='Salary')
# Basic scatter plot
ggplot(data, aes(x=Engine.Size, y=CO2.Emissions)) + geom_point() + geom_smooth(method=lm)
geom_point(size=2, shape=23)
#acces unique car makes
unique_car_makers = unique(data$Make)
for (i in unique_car_makers) {
print(i)
}
#calculamos las emisiones para cada marca en particular. queremos identificar cuales estan por encima o debajo del promedio
avg_co2_by <- aggregate(CO2.Emissions ~ Make + Model.1, data = data, FUN = mean)
avg_co2_by_maker <- aggregate(CO2.Emissions ~ Make, data = avg_co2_by, FUN = mean)
ggplot(data = avg_co2_by_maker) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#Graficamos unicamente las 5 marcas que tienen mayores emisiones de carbono y las que menor tienen
sorted_avarage_CO2_high = avg_co2_by_maker[order(-avg_co2_by_maker$CO2.Emissions),] #ordenamos de mayor a menor nuestro data set
Highest_emission_makers = head(sorted_avarage_CO2_high,5)
lowest_emission_makers = tail(sorted_avarage_CO2_high, 5)
low_high_emissions = rbind(Highest_emission_makers,lowest_emission_makers)
#graficamos el grafico de barras
ggplot(data = low_high_emissions) +
geom_col(mapping = aes(x = Make, y = CO2.Emissions))
#agregamos linea promedio:
mean_CO2<- mean(avg_co2_by_maker$CO2.Emissions)
#transformamos en variables dummies a las columnas categoricas para poder analizarlas
df_2 ={
data %>% mutate(dummy=1) %>%
spread(key=Fuel,value=dummy, fill=0) %>% slice(1:799)}
#renombramos algunas columnas para que sean mas legibles
colnames(df_2)[14] = "Diesel"
colnames(df_2)[15] = "E85"
colnames(df_2)[16] = 'Regular'
colnames(df_2)[17] = "Premium"
#corremos una nueva regresion incluyendo nuestras variables categoricas. Se omite la categoria al ser el caso base
#El tipo de gasolina, es estadisticamente significativo para explicar las emisiones de carbono?
Linear_model_2 = lm(CO2.Emissions ~Engine.Size + Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_2)
#Regresion explicando el consumo de combustible para los distintos tipos de gasolinas
#El tipo de gasolina, tiene efecto en el consumo de gasolonina?
#Puede haber multicolinealidad. La gasolina afecta el consumo de gasolina y el consumo de gasolina afecta las emisones
Linear_model_3 =lm(Fuel.Consumption ~ Diesel + Premium + Regular + E85, df_2)
summary(Linear_model_3)
# encontrar el valor máximo por equipo y puesto
maximo_por_cilindro = {
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == max (CO2.Emissions, na.rm = TRUE ))}
# encontrar el valor máximo por equipo y puesto
minimo_por_cilindro = {
df_2%>%
group_by (Cylinders)%>%
filter (CO2.Emissions == min (CO2.Emissions, na.rm = TRUE ))}
cor(sub_data)
ggcorrplot(cor(sub_data))
# Group by mean using dplyr
Mean_by_cylinder <- df_2 %>% group_by(Cylinders) %>%
summarise(mean_CO2=mean(CO2.Emissions),
.groups = 'drop')
View(Mean_by_cylinder)
